#spring:
#  rabbitmq:
#    host: 192.168.31.5
#    port: 5672
#    username: admin
#    password: admin
#  cloud:
#    stream:
#      bindings:
#        myInput:
#          #指定输入通道对应的主题名
#          destination: minestream
#        myOutput:
#          destination: minestream
#  cloud:
#    stream:
#      binders: # 在此处配置要绑定的rabbitmq的服务信息；
#        defaultRabbit: # 表示定义的名称，用于于binding整合
#          type: rabbit # 消息组件类型
#          environment: # 设置rabbitmq的相关的环境配置
#            spring:
#              rabbitmq:
#                host: 123.57.52.147
#                port: 5672
#                username: guest
#                password: guest
#      bindings: # 服务的整合处理
#          myOutput: # 这个名字是一个通道的名称
#            destination: studyExchange # 表示要使用的Exchange名称定义
#            content-type: application/json # 设置消息类型，本次为json，文本则设置“text/plain”
##            binder: defaultRabbit # 设置要绑定的消息服务的具体设置
#          myIntput:
#            destination: studyExchange # 表示要使用的Exchange名称定义
#            content-type: application/json # 设置消息类型，本次为json，文本则设置“text/plain”
#  application:
#    name: sso
#
#  redis:
#    database: 8
#    host: 127.0.0.1
#    port: 6379
#    password: 123456
#    timeout: 5000
#  cloud:
#    nacos:
#      config:
#        server-addr: 127.0.0.1:8848
#
#  datasource:
#    url: jdbc:mysql://localhost:3306/myself?useUnicode=true&characterEncoding=UTF-8&zeroDateTimeBehavior=convertToNull&allowMultiQueries=true&useSSL=false&serverTimezone=UTC
#    username: root
#    password: root
#    driver-class-name: com.mysql.jdbc.Driver
#    type: com.alibaba.druid.pool.DruidDataSource
#
#mybatis-plus:
#  mapper-locations: classpath:mapper/*.xml
#  #实体扫描，多个package用逗号或者分号分隔
#  typeAliasesPackage: myself.badwritten.model
#  global-config:
#    #主键类型  0:"数据库ID自增", 1:"用户输入ID",2:"全局唯一ID (数字类型唯一ID)", 3:"全局唯一ID UUID";
#    id-type: 3
#    #字段策略 0:"忽略判断",1:"非 NULL 判断"),2:"非空判断"
#    field-strategy: 1
#    sql-injector: com.baomidou.mybatisplus.mapper.LogicSqlInjector
#    #驼峰下划线转换
#    db-column-underline: true
#    #表名、是否使用下划线命名，默认数据库表使用下划线命名  true
#    table-underline: true
#    #刷新mapper 调试神器
#    refresh-mapper: true
#    #数据库大写下划线转换
#    capital-mode: true
#
#
#  configuration:
#    map-underscore-to-camel-case: true
#    cache-enabled: false
#    #配置JdbcTypeForNull
#    jdbc-type-for-null: 'null'
#    call-setters-on-nulls: true
#
